3/11/14

What I learned today:

the best way to hide/show a title on a specific page is using css with the proper selector

it is very easy to make a child theme by following the instructions

templates have straight up html code in them for the structure (the template), plus php which mostly calls functions that give you the content you need in a particular place.  

So if you want to show/hide particular elements, you can find them and change them just like in an html document.

some functions (the basic wordpress-defined ones?) include a "do_action" call which is a "hook" for actions you want to add, because do_action($tag, $args) will execute all the functions you (or someone) have associated with the $tag in some other place (where?) using the add_action() function.  

Things I learned this past week/end:

It's pretty common for themes to use the !important tag but some use it more than others.  There might even be legitimate reasons to use it.

!important causes the statement to override just about anything except another !important tag.

id selectors have strictly higher specificity than class selectors, even if the class selector is a child of the id selector.  Styles attached to selectors of higher specificity overrides those with lower specificity.

css-tricks.com is a good website.

reminder: for a css selector a space means "child of".  

3/13
What I learned today:
There are stylesheets that are part of plugins(?) that the Impulse theme uses that load *after* my theme stylesheet, so they override it.  One of these is Foundation which is currently controlling the text color, among other things.  Probably most of the styling.  Fat lot of good having a child theme does.  

These stylesheets are registered and loaded in functions.php, onto the hook 'wp_print_styles'.  
  Could be changed by directly customizing these css files and then loading those, instead. (Sounds like a hack.)  Or by attaching it to a different hook so that it loads sooner?  Or maybe somehow making my own stylesheet load later?  (Also sound like hacks.)

   From the Wordpress Codex: "wp_print_styles should not be used to enqueue styles or scripts on the front page. Use wp_enqueue_scripts instead."

  From the fora: http://wordpress.stackexchange.com/questions/2680/best-way-to-overide-plugin-css

Changed by overriding header.php to load the stylesheet after calling wp_head().  There is a problem because for some reason the impulse style.css has styles that were overridden by foundation.css.  This fix also breaks Simple Custom CSS, but I'll just use the child theme files directly.  Although that is less convenientâ€¦hmm.

3/15
Using FTP through commandline:  
connect with `ftp 192.186.253.132`
username limmudwordpress (maybe other things would work too?)
lcd = local change directory
cd = change directory (remote)
put = put

3/16
"of" in function names might stand for "options framework", a framework impulse seems to use.

ftp to the same ip address, login as impulse-child@limmudboston.com to go straight to the impulse-child directory.

3/18
Design note:  header can have search, links, etc. in it but only if it's the same color as the rest of the page (i.e. if it's not a separate untouchable image, but rather a part of the page.)

3/19
Impulse Theme lets you set the background color through the gui editor. I don't know how to do it through code but the existence of the option is probably why.  So don't try.  

3/20
@import in css only works if it's put before all of your css.
Foundation arranges things in a grid, defines classes .row and .columns. 
 
Options Framework options are pretty easy to add to: imitating the syntax and location, add your desired option (e.g. type="textarea") to the options.php file in the place where the rest of the options are defined.  You can also add and edit tabs in the admin gui in the same place.  These option fields will then show up in Appearance->Theme Options with the rest. Textareas allow (most) html tags, "text" does not.  

Then you use the options using of_get_option() in the relevant template. I.e. of_get_option() returns the content of the option field.

It's hard (impossible?) to align things vertically for a responsive layout.  Probably possible, but I'm not sure I really want the header to be responsive anyway.  Vertical alignment can be achieved by setting "line-height" to be the height of the container, because the text will be displayed in the middle of the line.

3/23
To change theme through Godaddy: in cPanel, under Databases, click phpMyAdmin.  In left navigation i305478_wp1 > wp_options > stylesheet

3/24
symptoms: works for a while, I work on it, so update style.css then get the white screen back.  Sometimes reloading in a minute or two works.
Fixing WSoD:  
   tried: resetting functions.php

